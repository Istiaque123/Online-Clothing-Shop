/*
import {
    loadFooter,
    setFooterNavigation
} from './footer.js';

import {
    loadNavBarBG,
    setupNavigation
} from './nav.js';



import {
    cardsData
} from './shop_cards.js';

document.addEventListener( "DOMContentLoaded", () => {
    // Calling functions for nav and footer
    setupNavigation();
    
    loadFooter().then( () => {
        setFooterNavigation();
    } );
    loadNavBarBG();
    
    // Function for Loading cards


    function generateCards( cardsData ) {

        const cardContainer = document.querySelector( "#cards" );
        cardContainer.innerHTML = ''; // clear if any things in the div

        cardsData.forEach( ( card, index ) => {
            let cardElement = document.createElement( "div" );

            // creating Class for card
            cardElement.className = "my-card w-[18rem] h-[40rem]  flex flex-col justify-start items-center";
            cardElement.setAttribute("id", `card_${card.id}`);

            // set cards attributes
            cardElement.dataset.price = card.price;
            cardElement.dataset.category = card.category;
            cardElement.dataset.title = card.title;
            cardElement.dataset.popularity = card.popularity;
            cardElement.dataset.rating = card.rating;
            cardElement.dataset.date = card.date;
            cardElement.dataset.id = card.id;

            let imgHight = "100%";

            if (card.dress_sizes.length === 0) {
                imgHight = "27.5rem"
            }

            cardElement.innerHTML = `
            <img id="card_img_${card.id}" src="${card. imgSrc}" class="card_img hover:cursor-pointer rounded-md w-[100%] h-[${imgHight}] object-cover" alt="model_${index}">

                            <div class="discription flex flex-col justify-center items-center ">

                                <h6 class=" text-stone-400 mt-3">${card.category}</h6>
                                <h6
                                   id= "card_title_${card.id}" class="card_title hover:cursor-pointer font-[Cormorant-Garamond] hover:text-red-600 text-lg font-bold">
                                   
                                   ${card.title}</h6>
                                <h6 class=" text-slate-500">$${card.price}</h6>
                            </div>

                             <div class="sizes flex mr-7">
                                <ul class="flex flex-row space-x-4 mr-4 justify-center items-center">
                                    ${card.dress_sizes.map(size => `<li class="flex border-2 w-8 h-8 items-center justify-center hover:border-solid hover:border-black"><a class="no-underline text-gray-600" href="#">${size}</a></li>`).join('')}
                                </ul>
                                </ul>
                            </div>

                            <div class="colors flex items-center justify-center relative">
                                <ul class="flex flex-row space-x-4 mr-4 items-center justify-center">
                                    ${card.dress_colors.map(color => `<li class=""><button class="bg-${color} w-5 h-5 border-2 border-solid border-black rounded-xl hover:h-6 hover:w-6"></button></li>`).join('')}
                                </ul>
                            </div>  
                            `;

            cardContainer.appendChild(cardElement);


            // add event listner on img and title

            document.getElementById(`card_img_${card.id}`).addEventListener('click', () => {
                navigateToProduct(card.id);
            });
            document.getElementById(`card_title_${card.id}`).addEventListener('click', () => {
                navigateToProduct(card.id);
            });

        } );
    }


    // functon to navigate to product_details page
    function navigateToProduct(productId) {
        const url = `/product?product_id=${productId}`;
        const newWindow = window.open(url, '_blank');
        if (newWindow) {
            newWindow.focus();
        } else {
            alert('Please allow pop-ups for this site to open the product details.');
        }
    }



    // load cards
    generateCards(cardsData);





    // Sorting functionality

    function sordCards( criteria ) {
        const cardContainer = document.querySelector( ".cards" );

        const cards = Array.from( cardContainer.children );

        cards.sort( ( a, b ) => {
            let aValue, bValue;

            switch ( criteria ) {
                case "popularity":
                    aValue = parseFloat( a.dataset.popularity );
                    bValue = parseFloat( b.dataset.popularity );
                    break;

                case "avg":
                    aValue = parseFloat( a.dataset.rating );
                    bValue = parseFloat( b.dataset.rating );
                    break;

                case "latest":
                    aValue = new Date( a.dataset.date );
                    bValue = new Date( b.dataset.date );
                    return bValue - aValue;

                case "low-high":
                    aValue = parseFloat( a.dataset.price );
                    bValue = parseFloat( b.dataset.price );
                    break;

                case "default":
                    aValue = parseInt( a.dataset.id );
                    bValue = parseInt( b.dataset.id );
                    break;

                case "high-low":
                    aValue = parseFloat( a.dataset.price );
                    bValue = parseFloat( b.dataset.price );
                    return bValue - aValue;


                default:
                    return 0;
            }



            if ( criteria === "high-low" || criteria === "popularity" || criteria === "avg" ) {
                return bValue - aValue;
            } else {
                return aValue - bValue;
            }

        } );

        cardContainer.innerHTML = "";
        cards.forEach( card => cardContainer.appendChild( card ) );

    }

    // call the sort function

    document.querySelector( "#sortCards" ).addEventListener( "change", ( event ) => {
        sordCards( event.target.value );
    } )





} );
*/
